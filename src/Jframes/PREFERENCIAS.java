/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Jframes;

import ExpressBus.EmpresaTransporteFacade;
import ExpressBus.Pasajero;
import ExpressBus.Persona;
import ExpressBus.PDFGenerator;
import javax.swing.JOptionPane;
import ExpressBus.PrecioStrategy;
import ExpressBus.PrecioStrategyFactory;
import ExpressBus.Ruta;
import Jframes.RESERVA;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
/**
 *
 * @author EQUIPO
 */
public class PREFERENCIAS extends javax.swing.JInternalFrame {
    
    private String nombrePasajero;
    private String dniPasajero;
    private String telefonoPasajero;
    private String correoPasajero;
    private Ruta ruta;
    private PrecioStrategy precioStrategy;
    private EmpresaTransporteFacade facade = new EmpresaTransporteFacade();
    
    public PREFERENCIAS(Ruta ruta) {
        initComponents();
        this.ruta=ruta;
      
        int valor = (Integer) asientos.getValue();
    if (valor < 1) {
        asientos.setValue(1); 
    }
    int valor_2 = (Integer) num_equipaje.getValue();
        if (valor_2<1) {
            num_equipaje.setValue(2);
        }
    }
    
    public PREFERENCIAS(Ruta ruta, String nombre, String dni, String telefono, String correo) {
        this(ruta);
        this.nombrePasajero = nombre;
        this.dniPasajero = dni;
        this.telefonoPasajero = telefono;
        this.correoPasajero = correo;
    }
    
    public PREFERENCIAS() {
        initComponents();
       
        
    }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        total_pago = new javax.swing.JTextField();
        actualizar = new javax.swing.JButton();
        asientos = new javax.swing.JSpinner();
        credito = new javax.swing.JRadioButton();
        efectivo = new javax.swing.JRadioButton();
        num_equipaje = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        modelo_bus_VIP = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        reservar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        modelo_bus_Estandar = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtReporteBoleta = new javax.swing.JTextArea();
        btnGenerarBoleta = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gestion de Reserva");
        setPreferredSize(new java.awt.Dimension(900, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel13.setText("Reservaci√≥n:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 187, 38));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Metodo de pago:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Cantidad de asientos:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 30));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Bus servicio Estandar:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, 30));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Vista Previa de la Boleta/Factura");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 60, -1, 30));

        total_pago.setEditable(false);
        total_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_pagoActionPerformed(evt);
            }
        });
        getContentPane().add(total_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 130, -1));

        actualizar.setText("Refresh");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, -1));

        asientos.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));
        asientos.setToolTipText("");
        asientos.setName(""); // NOI18N
        getContentPane().add(asientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 60, -1));

        credito.setText("Credito");
        getContentPane().add(credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        efectivo.setText("Efectivo");
        getContentPane().add(efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, -1, -1));

        num_equipaje.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        num_equipaje.setToolTipText("");
        getContentPane().add(num_equipaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 60, -1));

        jScrollPane1.setAlignmentX(1.0F);
        jScrollPane1.setAlignmentY(1.0F);

        modelo_bus_VIP.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "VIP: Scania Marcopolo G7", "VIP: Scania Marcopolo G7/G8 DD", "VIP: Volvo Paradiso 1800 DD", "VIP: Mercedes Irizar i6/i8", "VIP: Comil Campione DD", "VIP: MAN Marcopolo G8" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        modelo_bus_VIP.setAlignmentX(0.0F);
        modelo_bus_VIP.setAlignmentY(0.0F);
        jScrollPane1.setViewportView(modelo_bus_VIP);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 220, 130));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("(s/.10 unidad):");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, 30));

        reservar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reservar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/choose.png"))); // NOI18N
        reservar.setText("Reservar");
        reservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservarActionPerformed(evt);
            }
        });
        getContentPane().add(reservar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 170, 50));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Cantidad de equipaje ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, 30));

        modelo_bus_Estandar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Estandar: Volvo B380R Modasa Zeus 3", "Estandar: Scania Marcopolo G6", "Estandar: Volvo Marcopolo Paradiso 1200", "Estandar: Mercedes-Benz Irizar Century", "Estandar: Volvo Nielson Diplomata" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        modelo_bus_Estandar.setAlignmentX(0.0F);
        modelo_bus_Estandar.setAlignmentY(0.0F);
        jScrollPane2.setViewportView(modelo_bus_Estandar);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 240, 130));

        txtReporteBoleta.setColumns(20);
        txtReporteBoleta.setRows(5);
        jScrollPane3.setViewportView(txtReporteBoleta);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 360, 360));

        btnGenerarBoleta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/magic-wand.png"))); // NOI18N
        btnGenerarBoleta.setText("Generar Boleta");
        btnGenerarBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarBoletaActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenerarBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, 160, 50));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("MODELO DE BUSES");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, 30));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Bus servicio VIP:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, 30));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Total a pagar:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

   

    
    private void total_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_pagoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_total_pagoActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
            if (ruta != null) {
            int cantidadAsientos = (Integer) asientos.getValue();
            double precioBase = ruta.getPrecio();      
            int numeroEquipaje = (Integer) num_equipaje.getValue();

            boolean esVIP = modelo_bus_VIP.getSelectedValue() != null;
            boolean esEstandar = modelo_bus_Estandar.getSelectedValue() != null;

            if (!esVIP && !esEstandar) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un modelo de bus (VIP o Est√°ndar).", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Usar estrategia correspondiente
            String modeloSeleccionado = esVIP ? modelo_bus_VIP.getSelectedValue() : modelo_bus_Estandar.getSelectedValue();
            precioStrategy = PrecioStrategyFactory.crearPrecioStrategy(modeloSeleccionado);


            double total = precioStrategy.calcularTotal(precioBase, cantidadAsientos, numeroEquipaje);
            total_pago.setText(String.format("%.2f", total));
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void reservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarActionPerformed
        // TODO add your handling code here:

        int cantidadAsientos = (Integer) asientos.getValue();
        int cantidadEquipaje = (Integer) num_equipaje.getValue();
        String modeloSeleccionado = modelo_bus_VIP.getSelectedValue();
        if (modeloSeleccionado == null || modeloSeleccionado.isEmpty()){
            modeloSeleccionado = modelo_bus_Estandar.getSelectedValue();
        }
        boolean pagoCredito = credito.isSelected();
        boolean pagoEfectivo = efectivo.isSelected();

        // Validaciones b√°sicas
        if (cantidadAsientos <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar al menos 1 asiento.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return; // No continuar
        }

        if (cantidadEquipaje < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "La cantidad de equipaje no puede ser negativa.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (modeloSeleccionado == null || modeloSeleccionado.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un modelo de bus.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

         if (!pagoCredito && !pagoEfectivo) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un m√©todo de pago.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
         
       RESERVA pasajero_nuevo = new RESERVA();
       pasajero_nuevo.setLocationRelativeTo(this); // O "this", si quieres que se centre en la actual
       pasajero_nuevo.setVisible(true);
       this.dispose();
  
    }//GEN-LAST:event_reservarActionPerformed

    private void btnGenerarBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarBoletaActionPerformed
        int cantidadAsientos = (Integer) asientos.getValue();
            int cantidadEquipaje = (Integer) num_equipaje.getValue();
            String modeloSeleccionado = modelo_bus_VIP.getSelectedValue();
            if (modeloSeleccionado == null) {
                modeloSeleccionado = modelo_bus_Estandar.getSelectedValue();
            }

        boolean pagoCredito = credito.isSelected();
        boolean pagoEfectivo = efectivo.isSelected();
        String metodoPago = pagoCredito ? "Cr√©dito" : pagoEfectivo ? "Efectivo" : "No especificado";

        // Validaci√≥n b√°sica por si no se ingres√≥ precio
        if (ruta == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error: Ruta no inicializada. No se puede calcular precio.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        double precioBase = ruta.getPrecio();
        double precioFinalAsiento = modelo_bus_VIP.getSelectedValue() != null ? precioBase * 1.10 : precioBase;
        double total = (cantidadAsientos * precioFinalAsiento) + (cantidadEquipaje * 10);

        StringBuilder boleta = new StringBuilder();
        boleta.append("====== BOLETA DE RESERVA ======\n");
        
        // Informaci√≥n del pasajero
        boleta.append("\n--- DATOS DEL PASAJERO ---\n");
        boleta.append("Nombre: ").append(nombrePasajero).append("\n");
        boleta.append("DNI: ").append(dniPasajero).append("\n");
        boleta.append("Tel√©fono: ").append(telefonoPasajero).append("\n");
        boleta.append("Correo: ").append(correoPasajero).append("\n");
        
        // Informaci√≥n de la ruta
        boleta.append("\n--- INFORMACI√ìN DE VIAJE ---\n");
        boleta.append("Ruta: ").append(ruta.getRuta()).append("\n");
        boleta.append("Tiempo de viaje (hrs): ").append(ruta.getTiempoViaje()).append("\n");
        
        // Informaci√≥n del servicio
        boleta.append("\n--- DETALLES DE SERVICIO ---\n");
        boleta.append("Modelo de Bus: ").append(modeloSeleccionado).append("\n");
        boleta.append("Cantidad de Asientos: ").append(cantidadAsientos).append("\n");
        boleta.append("Cantidad de Equipaje: ").append(cantidadEquipaje).append("\n");
        boleta.append("M√©todo de Pago: ").append(metodoPago).append("\n");
        
        // Informaci√≥n del pago
        boleta.append("\n--- DETALLE DE PAGO ---\n");
        boleta.append(String.format("Precio por asiento: S/. %.2f\n", precioFinalAsiento));
        boleta.append(String.format("Costo total equipaje: S/. %.2f\n", cantidadEquipaje * 10.0));
        boleta.append(String.format("TOTAL A PAGAR: S/. %.2f\n", total));
        boleta.append("\n================================\n");
        boleta.append("Fecha de emisi√≥n: ").append(java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))).append("\n");
        boleta.append("================================\n");

        txtReporteBoleta.setText(boleta.toString());
        
        // Ya no necesitamos este bloque ya que vamos a generar un PDF completo m√°s abajo
        // (Si deseas mantener ambas funcionalidades, puedes eliminar este comentario)
        //Guardar en MongoDB (boletas_reserva)
        /*facade.guardarBoletaReserva(modeloSeleccionado, cantidadAsientos, cantidadEquipaje, metodoPago, precioFinalAsiento, total, total);*/
        facade.guardarBoletaReserva(modeloSeleccionado, cantidadAsientos, cantidadEquipaje, metodoPago, precioFinalAsiento, 
                                   cantidadEquipaje * 10.0, total, ruta.getRuta(), ruta.getTiempoViaje());
        // Generar PDF de la boleta
        try {
            // Crear nombre del archivo y obtener ruta
            // Crear carpeta para guardar boletas
            String rutaDocumentos = System.getProperty("user.home") + "\\Documents";
            String carpetaPDFs = rutaDocumentos + "\\Cruz_del_Sur_PDFs";
            
            // Crear directorio si no existe
            java.io.File directorio = new java.io.File(carpetaPDFs);
            if (!directorio.exists()) {
                directorio.mkdirs();
            }
            
            // Generar nombre √∫nico para el archivo
            java.time.LocalDateTime now = java.time.LocalDateTime.now();
            java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss");
            String nombreArchivo = "Boleta_" + now.format(formatter) + ".pdf";
            String rutaCompleta = carpetaPDFs + "\\" + nombreArchivo;
            
            // Crear contenido para la boleta en formato PDF
            StringBuilder contenidoBoleta = new StringBuilder();
            contenidoBoleta.append("====== BOLETA DE RESERVA ======\n");
            contenidoBoleta.append("Fecha: ").append(now.format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))).append("\n");
            contenidoBoleta.append("=======================================\n");
            contenidoBoleta.append("Modelo de Bus: ").append(modeloSeleccionado).append("\n");
            contenidoBoleta.append("Cantidad de Asientos: ").append(cantidadAsientos).append("\n");
            contenidoBoleta.append("Cantidad de Equipaje: ").append(cantidadEquipaje).append("\n");
            contenidoBoleta.append("M√©todo de Pago: ").append(metodoPago).append("\n");
            contenidoBoleta.append("Precio por asiento: S/. ").append(String.format("%.2f", precioFinalAsiento)).append("\n");
            contenidoBoleta.append("Costo total equipaje: S/. ").append(String.format("%.2f", cantidadEquipaje * 10.0)).append("\n");
            contenidoBoleta.append("=======================================\n");
            contenidoBoleta.append("TOTAL A PAGAR: S/. ").append(String.format("%.2f", total)).append("\n");
            contenidoBoleta.append("=======================================\n");
            contenidoBoleta.append("Gracias por elegir Cruz del Sur\n");
            // Usar PDFGenerator para generar un PDF real
            // Utilizar la clase PDFGenerator que implementa la librer√≠a iText
            boolean exito = PDFGenerator.generarBoletaPDF(
                modeloSeleccionado, 
                cantidadAsientos, 
                cantidadEquipaje, 
                metodoPago, 
                precioFinalAsiento, 
                cantidadEquipaje * 10.0, 
                total, 
                rutaCompleta,
                nombrePasajero,
                dniPasajero,
                telefonoPasajero,
                correoPasajero,
                ruta.getRuta(),
                ruta.getTiempoViaje()
            );
            if (exito) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Boleta PDF generada exitosamente.\nArchivo guardado en: " + rutaCompleta, 
                    "Boleta Generada", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Error al generar el PDF de la boleta.", 
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println("Error al generar PDF: " + e.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al generar el archivo: " + e.getMessage(), 
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerarBoletaActionPerformed
    /**
     * M√©todo para generar un archivo de texto simple para la boleta
     * @param modeloBus Modelo del bus
     * @param cantidadAsientos Cantidad de asientos
     * @param cantidadEquipaje Cantidad de equipaje
     * @param metodoPago M√©todo de pago
     * @param precioAsiento Precio por asiento
     * @param costoEquipaje Costo total del equipaje
     * @param total Total a pagar
     * @param rutaArchivo Ruta donde se guardar√° el archivo
     * @return true si se cre√≥ correctamente, false en caso contrario
     */
    private boolean generarArchivoTextoSimple(String modeloBus, int cantidadAsientos, 
                                         int cantidadEquipaje, String metodoPago, 
                                         double precioAsiento, double costoEquipaje, 
                                         double total, String rutaArchivo) {
        try (java.io.FileWriter writer = new java.io.FileWriter(rutaArchivo)) {
            writer.write("====== BOLETA DE RESERVA ======\n");
            writer.write("Fecha: " + java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")) + "\n");
            writer.write("=======================================\n");
            writer.write("Modelo de Bus: " + modeloBus + "\n");
            writer.write("Cantidad de Asientos: " + cantidadAsientos + "\n");
            writer.write("Cantidad de Equipaje: " + cantidadEquipaje + "\n");
            writer.write("M√©todo de Pago: " + metodoPago + "\n");
            writer.write("Precio por asiento: S/. " + String.format("%.2f", precioAsiento) + "\n");
            writer.write("Costo total equipaje: S/. " + String.format("%.2f", costoEquipaje) + "\n");
            writer.write("=======================================\n");
            writer.write("TOTAL A PAGAR: S/. " + String.format("%.2f", total) + "\n");
            writer.write("=======================================\n");
            writer.write("Gracias por elegir Cruz del Sur\n");
            return true;
        } catch (java.io.IOException e) {
            System.err.println("Error al escribir archivo: " + e.getMessage());
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JSpinner asientos;
    private javax.swing.JButton btnGenerarBoleta;
    private javax.swing.JRadioButton credito;
    private javax.swing.JRadioButton efectivo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> modelo_bus_Estandar;
    private javax.swing.JList<String> modelo_bus_VIP;
    private javax.swing.JSpinner num_equipaje;
    private javax.swing.JButton reservar;
    private javax.swing.JTextField total_pago;
    private javax.swing.JTextArea txtReporteBoleta;
    // End of variables declaration//GEN-END:variables
}
